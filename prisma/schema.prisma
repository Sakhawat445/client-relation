// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String  @unique
  password  String
  imageURL  String?
  createdAt DateTime @default(now())
   reset_token            String?  // Add this line
   reset_token_expiration DateTime? // Add this line
   role     UserRole @default(EMPLOYEE)
}


model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  imageURL    String?
  name        String
  price       Int
  stock       Int
  companyName String
  createdAt   DateTime @default(now())
    customers   Customer[]

}

model Customer {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String  @unique
  imageURI     String?
  orderCount   Int?
  spendings    Int?
  documentURL  String?
  createdDate  DateTime @default(now())
  status       CustomerStatus @default(PENDING)
  address      String?
  contactNumber Int
  deviceType   DeviceType
    productType   String  @db.ObjectId
  product       Product @relation(fields: [productType], references: [id]) 
}

// type Address {
//   city    String
//   country String
// }

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  products  String[] // Array of product IDs
  customer  OrderCustomer
  price     Int
  status    OrderStatus
  date      DateTime @default(now())
}

type OrderCustomer {
  country    String
  orderCount Int?
}

enum CustomerStatus {
  PENDING
  APPROVED
}

enum DeviceType {
  MOBILE
  DESKTOP
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELED
}

enum UserRole {
EMPLOYEE
  ADMIN
}
